#include <Adafruit_GFX.h>
#include <Adafruit_GrayOLED.h>
#include <Adafruit_SPITFT.h>
#include <Adafruit_SPITFT_Macros.h>
#include <gfxfont.h>

#include <SPI.h>

//#include <Blynk.h>
#include <Adafruit_SSD1306.h>
#include <splash.h>

//#include <LiquidCrystal_I2C.h>
//#include <Wifi.h>
#include <Wire.h>
#include <ESP8266WiFi.h>

#define BLYNK_TEMPLATE_ID "TMPL6JFi__9jU"
#define BLYNK_TEMPLATE_NAME "Quickstart Template"
#define BLYNK_AUTH_TOKEN "gLzFYaggHpGAc8Dd3w278ygo83AD4_WO"
#define BLYNK_PRINT Serial
#include <PZEM004Tv30.h>
#include <BlynkSimpleEsp8266.h>

#define SCREEN_WIDTH 128 
#define SCREEN_HEIGHT 64 

// 'ews 164 bmp', 109x64px
const unsigned char .nama sesuai file. [] PROGMEM = {
//byte sesuai generate arduino code by chrome
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0xfe, 0x00, 0x03, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
	0xff, 0xff, 0xf9, 0xde, 0x00, 0x03, 0xdc, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0x00, 0x03, 0xef, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 
	0x02, 0x03, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x02, 0x03, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0x03, 0x06, 0x07, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x03, 0x06, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x01, 0x1b, 0xc0, 0x05, 0xff, 0xff, 0xff, 0xff, 0xf8, 
	0xff, 0xff, 0xff, 0xff, 0xf9, 0x80, 0x3f, 0xe0, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x7f, 0xe0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 
	0xc0, 0x00, 0x7f, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 
	0x3f, 0xf0, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xfe, 0x04, 0xc0, 0x3e, 0xe0, 
	0x00, 0x03, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xfc, 0x0c, 0xc0, 0x1f, 0xc0, 0x02, 0x01, 
	0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xf8, 0x0e, 0xc0, 0x1f, 0xc0, 0x06, 0x00, 0xff, 0xff, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xf0, 0x02, 0x00, 0x1f, 0x80, 0x0c, 0x00, 0x3f, 0xff, 0xff, 0xf8, 
	0xff, 0xff, 0xff, 0xc0, 0x03, 0x00, 0x0f, 0xc0, 0x0c, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0xff, 0xff, 
	0xff, 0xc0, 0x01, 0x00, 0x3f, 0xf0, 0x1f, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xf0, 
	0x00, 0x81, 0xff, 0xfc, 0x1e, 0x00, 0x3f, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xc3, 
	0xff, 0xfe, 0x0c, 0x00, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x43, 0xff, 0xfe, 
	0x0c, 0x01, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xfe, 0x03, 0x61, 0xf7, 0xfc, 0x08, 0x03, 
	0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x83, 0x10, 0xff, 0xf8, 0x10, 0x0f, 0xff, 0xff, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x60, 0x20, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xf8, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x07, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0x17, 0xc0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0x00, 0x02, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
	0x37, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x08, 0x1f, 0xc0, 
	0x87, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd8, 0x18, 0xc0, 0xdf, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x08, 0x80, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x05, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0xff, 0x00, 0x07, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0xe1, 0xff, 
	0x80, 0x0f, 0xfc, 0x3f, 0xc7, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xe0, 0x0f, 0xff, 0xe0, 0x3f, 
	0xff, 0x80, 0x3f, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xf1, 
	0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8
};


Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

char auth[] = "gLzFYaggHpGAc8Dd3w278ygo83AD4_WO";

//LiquidCrystal_I2C lcd(0x27,20,4);

//SSID untuk wifi
char ssid[] = "QWERTY";
char pass[] = "12345678";

//inisialisasi objek untuk PZEM (sensor arus)
 PZEM004Tv30 pzem (5, 12); // 5=D1(TX) 12=D6 (RX)


// variable penampung untuk nilai sensor arus
float Power, Energy, Voltage, Current;
//int Voltage, Current;

void setup () {
  //aktifkan serial
  Serial.begin(9600);
  // koneksi ke Blynk
  Blynk.begin(auth, ssid, pass);
  //aktifkan LCD
  //lcd.init();
  //lcd.backlight();

  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.clearDisplay();
  display.drawBitmap(0, 0,nama sesuai file,128,64, 1);
  display.display();
  display.clearDisplay();
  delay (2000);
 Serial.println();
}

 void loop() { 
  delay (1000):
  //lcd.init();
  //lcd.backlight();
  //baca nilai power (kW)
  Power = pzem.power();
  // display.clearDisplay();

  //jika gagal membaca power
  if (isnan(Power))
 {
    Serial.println("Gagal membaca power");
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 1);
    display.println("Gagal membaca power");
    display.display(); 
  
 }
 else
 {
    Serial.print ("Power : ");
    Serial.print(Power);     
    Serial.println ("kW");
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 1);
    display.println("Power : ");
 }
  

 //baca nilai energi (kWH)
  Energy = pzem.energy();
  //jika gagal membaca energi
  if (isnan(Energy))
 {
    Serial.println("Gagal membaca energi");
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 20);
    display.println("Gagal membaca energi");
    display.display(); 
 }
 else
 {
    Serial.print ("Energi : ");
    Serial.print(Energy);
    Serial.println ("kWH");
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 20);
    display.println("Gagal membaca energi");
    display.display(); 
 }

 //baca nilai voltage (V)
  Voltage = pzem.voltage();
  //jika gagal membaca voltage
  if (isnan(Voltage))
 {
    Serial.println("Gagal membaca voltage");
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 35);
    display.println("Gagal membaca voltage");
    display.display(); 
 }
 else
 {
    Serial.print ("Voltage : ");
    Serial.print(Voltage);
    Serial.println ("V");
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 35);
    display.println("Gagal membaca power");
    display.display(); 
 }

//baca nilai current (A)
  Current = pzem.current();
  //jika gagal membaca current
  if (isnan(Current))
 {
    Serial.println("Gagal membaca current");
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 50);
    display.println("Gagal membaca current");
    display.display(); 
 }
 else
 {
    Serial.print ("Current : ");
    Serial.print(Current);
    Serial.println ("A");
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 50);
    display.println("Gagal membaca current");
    display.display(); 
 }

  Serial.println();

   //kirim data ke Blynk
   //Power = V0, Energi = V1, Voltage = V2, Current = V3
   Blynk.virtualWrite(V0, Power);
   Blynk.virtualWrite(V1, Energy);
   Blynk.virtualWrite(V2, Voltage);
   Blynk.virtualWrite(V3, Current);
   
   delay (4000);
   display.clearDisplay();
   Blynk.run ();
 }




















